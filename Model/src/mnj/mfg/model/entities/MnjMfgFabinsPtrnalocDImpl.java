package mnj.mfg.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Feb 20 14:32:46 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgFabinsPtrnalocDImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AlocDetailId {
            public Object get(MnjMfgFabinsPtrnalocDImpl obj) {
                return obj.getAlocDetailId();
            }

            public void put(MnjMfgFabinsPtrnalocDImpl obj, Object value) {
                obj.setAlocDetailId((Number)value);
            }
        }
        ,
        AlocLineId {
            public Object get(MnjMfgFabinsPtrnalocDImpl obj) {
                return obj.getAlocLineId();
            }

            public void put(MnjMfgFabinsPtrnalocDImpl obj, Object value) {
                obj.setAlocLineId((Number)value);
            }
        }
        ,
        SupplierSrNo {
            public Object get(MnjMfgFabinsPtrnalocDImpl obj) {
                return obj.getSupplierSrNo();
            }

            public void put(MnjMfgFabinsPtrnalocDImpl obj, Object value) {
                obj.setSupplierSrNo((String)value);
            }
        }
        ,
        RollNo {
            public Object get(MnjMfgFabinsPtrnalocDImpl obj) {
                return obj.getRollNo();
            }

            public void put(MnjMfgFabinsPtrnalocDImpl obj, Object value) {
                obj.setRollNo((String)value);
            }
        }
        ,
        ShrinkLength {
            public Object get(MnjMfgFabinsPtrnalocDImpl obj) {
                return obj.getShrinkLength();
            }

            public void put(MnjMfgFabinsPtrnalocDImpl obj, Object value) {
                obj.setShrinkLength((Number)value);
            }
        }
        ,
        ShrinkWidth {
            public Object get(MnjMfgFabinsPtrnalocDImpl obj) {
                return obj.getShrinkWidth();
            }

            public void put(MnjMfgFabinsPtrnalocDImpl obj, Object value) {
                obj.setShrinkWidth((Number)value);
            }
        }
        ,
        RollLength {
            public Object get(MnjMfgFabinsPtrnalocDImpl obj) {
                return obj.getRollLength();
            }

            public void put(MnjMfgFabinsPtrnalocDImpl obj, Object value) {
                obj.setRollLength((Number)value);
            }
        }
        ,
        Remarks {
            public Object get(MnjMfgFabinsPtrnalocDImpl obj) {
                return obj.getRemarks();
            }

            public void put(MnjMfgFabinsPtrnalocDImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        SupplierRollNo {
            public Object get(MnjMfgFabinsPtrnalocDImpl obj) {
                return obj.getSupplierRollNo();
            }

            public void put(MnjMfgFabinsPtrnalocDImpl obj, Object value) {
                obj.setSupplierRollNo((String)value);
            }
        }
        ,
        MnjMfgFabinsPtrnalocL {
            public Object get(MnjMfgFabinsPtrnalocDImpl obj) {
                return obj.getMnjMfgFabinsPtrnalocL();
            }

            public void put(MnjMfgFabinsPtrnalocDImpl obj, Object value) {
                obj.setMnjMfgFabinsPtrnalocL((MnjMfgFabinsPtrnalocLImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgFabinsPtrnalocDImpl object);

        public abstract void put(MnjMfgFabinsPtrnalocDImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ALOCDETAILID = AttributesEnum.AlocDetailId.index();
    public static final int ALOCLINEID = AttributesEnum.AlocLineId.index();
    public static final int SUPPLIERSRNO = AttributesEnum.SupplierSrNo.index();
    public static final int ROLLNO = AttributesEnum.RollNo.index();
    public static final int SHRINKLENGTH = AttributesEnum.ShrinkLength.index();
    public static final int SHRINKWIDTH = AttributesEnum.ShrinkWidth.index();
    public static final int ROLLLENGTH = AttributesEnum.RollLength.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int SUPPLIERROLLNO = AttributesEnum.SupplierRollNo.index();
    public static final int MNJMFGFABINSPTRNALOCL = AttributesEnum.MnjMfgFabinsPtrnalocL.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgFabinsPtrnalocDImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.MnjMfgFabinsPtrnalocD");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for AlocDetailId, using the alias name AlocDetailId.
     * @return the AlocDetailId
     */
    public Number getAlocDetailId() {
        return (Number)getAttributeInternal(ALOCDETAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AlocDetailId.
     * @param value value to set the AlocDetailId
     */
    public void setAlocDetailId(Number value) {
        setAttributeInternal(ALOCDETAILID, value);
    }

    /**
     * Gets the attribute value for AlocLineId, using the alias name AlocLineId.
     * @return the AlocLineId
     */
    public Number getAlocLineId() {
        return (Number)getAttributeInternal(ALOCLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AlocLineId.
     * @param value value to set the AlocLineId
     */
    public void setAlocLineId(Number value) {
        setAttributeInternal(ALOCLINEID, value);
    }

    /**
     * Gets the attribute value for SupplierSrNo, using the alias name SupplierSrNo.
     * @return the SupplierSrNo
     */
    public String getSupplierSrNo() {
        return (String)getAttributeInternal(SUPPLIERSRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SupplierSrNo.
     * @param value value to set the SupplierSrNo
     */
    public void setSupplierSrNo(String value) {
        setAttributeInternal(SUPPLIERSRNO, value);
    }

    /**
     * Gets the attribute value for RollNo, using the alias name RollNo.
     * @return the RollNo
     */
    public String getRollNo() {
        return (String)getAttributeInternal(ROLLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for RollNo.
     * @param value value to set the RollNo
     */
    public void setRollNo(String value) {
        setAttributeInternal(ROLLNO, value);
    }

    /**
     * Gets the attribute value for ShrinkLength, using the alias name ShrinkLength.
     * @return the ShrinkLength
     */
    public Number getShrinkLength() {
        return (Number)getAttributeInternal(SHRINKLENGTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShrinkLength.
     * @param value value to set the ShrinkLength
     */
    public void setShrinkLength(Number value) {
        setAttributeInternal(SHRINKLENGTH, value);
    }

    /**
     * Gets the attribute value for ShrinkWidth, using the alias name ShrinkWidth.
     * @return the ShrinkWidth
     */
    public Number getShrinkWidth() {
        return (Number)getAttributeInternal(SHRINKWIDTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShrinkWidth.
     * @param value value to set the ShrinkWidth
     */
    public void setShrinkWidth(Number value) {
        setAttributeInternal(SHRINKWIDTH, value);
    }

    /**
     * Gets the attribute value for RollLength, using the alias name RollLength.
     * @return the RollLength
     */
    public Number getRollLength() {
        return (Number)getAttributeInternal(ROLLLENGTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for RollLength.
     * @param value value to set the RollLength
     */
    public void setRollLength(Number value) {
        setAttributeInternal(ROLLLENGTH, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for SupplierRollNo, using the alias name SupplierRollNo.
     * @return the SupplierRollNo
     */
    public String getSupplierRollNo() {
        return (String)getAttributeInternal(SUPPLIERROLLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SupplierRollNo.
     * @param value value to set the SupplierRollNo
     */
    public void setSupplierRollNo(String value) {
        setAttributeInternal(SUPPLIERROLLNO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MnjMfgFabinsPtrnalocLImpl.
     */
    public MnjMfgFabinsPtrnalocLImpl getMnjMfgFabinsPtrnalocL() {
        return (MnjMfgFabinsPtrnalocLImpl)getAttributeInternal(MNJMFGFABINSPTRNALOCL);
    }

    /**
     * Sets <code>value</code> as the associated entity MnjMfgFabinsPtrnalocLImpl.
     */
    public void setMnjMfgFabinsPtrnalocL(MnjMfgFabinsPtrnalocLImpl value) {
        setAttributeInternal(MNJMFGFABINSPTRNALOCL, value);
    }


    /**
     * @param alocDetailId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number alocDetailId) {
        return new Key(new Object[]{alocDetailId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("MNJ_MFG_FABINS_PTRNALOC_D_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setAlocDetailId(sVal);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

     /**
      * Add locking logic here.
      */
     //    public void lock() {
     //        super.lock();
     //    }
      public void lock() {
         try {
             super.lock();
         } catch (oracle.jbo.RowInconsistentException e) {
             if (e.getErrorCode().equals("25014")) {
                 super.lock();
             } else
                 throw e;
         }
     }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
