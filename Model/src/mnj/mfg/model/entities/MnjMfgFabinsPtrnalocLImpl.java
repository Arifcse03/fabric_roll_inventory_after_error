package mnj.mfg.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Feb 20 14:32:08 PKT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgFabinsPtrnalocLImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AlocLineId {
            public Object get(MnjMfgFabinsPtrnalocLImpl obj) {
                return obj.getAlocLineId();
            }

            public void put(MnjMfgFabinsPtrnalocLImpl obj, Object value) {
                obj.setAlocLineId((Number)value);
            }
        }
        ,
        ProdLId {
            public Object get(MnjMfgFabinsPtrnalocLImpl obj) {
                return obj.getProdLId();
            }

            public void put(MnjMfgFabinsPtrnalocLImpl obj, Object value) {
                obj.setProdLId((Number)value);
            }
        }
        ,
        ShrinkPattern {
            public Object get(MnjMfgFabinsPtrnalocLImpl obj) {
                return obj.getShrinkPattern();
            }

            public void put(MnjMfgFabinsPtrnalocLImpl obj, Object value) {
                obj.setShrinkPattern((String)value);
            }
        }
        ,
        LengthWiseFrom {
            public Object get(MnjMfgFabinsPtrnalocLImpl obj) {
                return obj.getLengthWiseFrom();
            }

            public void put(MnjMfgFabinsPtrnalocLImpl obj, Object value) {
                obj.setLengthWiseFrom((Number)value);
            }
        }
        ,
        LengthWiseTo {
            public Object get(MnjMfgFabinsPtrnalocLImpl obj) {
                return obj.getLengthWiseTo();
            }

            public void put(MnjMfgFabinsPtrnalocLImpl obj, Object value) {
                obj.setLengthWiseTo((Number)value);
            }
        }
        ,
        WidthWiseFrom {
            public Object get(MnjMfgFabinsPtrnalocLImpl obj) {
                return obj.getWidthWiseFrom();
            }

            public void put(MnjMfgFabinsPtrnalocLImpl obj, Object value) {
                obj.setWidthWiseFrom((Number)value);
            }
        }
        ,
        WidthWiseTo {
            public Object get(MnjMfgFabinsPtrnalocLImpl obj) {
                return obj.getWidthWiseTo();
            }

            public void put(MnjMfgFabinsPtrnalocLImpl obj, Object value) {
                obj.setWidthWiseTo((Number)value);
            }
        }
        ,
        TotalRolls {
            public Object get(MnjMfgFabinsPtrnalocLImpl obj) {
                return obj.getTotalRolls();
            }

            public void put(MnjMfgFabinsPtrnalocLImpl obj, Object value) {
                obj.setTotalRolls((Number)value);
            }
        }
        ,
        TotalYrds {
            public Object get(MnjMfgFabinsPtrnalocLImpl obj) {
                return obj.getTotalYrds();
            }

            public void put(MnjMfgFabinsPtrnalocLImpl obj, Object value) {
                obj.setTotalYrds((Number)value);
            }
        }
        ,
        Reamarks {
            public Object get(MnjMfgFabinsPtrnalocLImpl obj) {
                return obj.getReamarks();
            }

            public void put(MnjMfgFabinsPtrnalocLImpl obj, Object value) {
                obj.setReamarks((String)value);
            }
        }
        ,
        MnjMfgFabinsPtrnalocD {
            public Object get(MnjMfgFabinsPtrnalocLImpl obj) {
                return obj.getMnjMfgFabinsPtrnalocD();
            }

            public void put(MnjMfgFabinsPtrnalocLImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MnjMfgFabinsProdLEO {
            public Object get(MnjMfgFabinsPtrnalocLImpl obj) {
                return obj.getMnjMfgFabinsProdLEO();
            }

            public void put(MnjMfgFabinsPtrnalocLImpl obj, Object value) {
                obj.setMnjMfgFabinsProdLEO((MnjMfgFabinsProdLEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgFabinsPtrnalocLImpl object);

        public abstract void put(MnjMfgFabinsPtrnalocLImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ALOCLINEID = AttributesEnum.AlocLineId.index();
    public static final int PRODLID = AttributesEnum.ProdLId.index();
    public static final int SHRINKPATTERN = AttributesEnum.ShrinkPattern.index();
    public static final int LENGTHWISEFROM = AttributesEnum.LengthWiseFrom.index();
    public static final int LENGTHWISETO = AttributesEnum.LengthWiseTo.index();
    public static final int WIDTHWISEFROM = AttributesEnum.WidthWiseFrom.index();
    public static final int WIDTHWISETO = AttributesEnum.WidthWiseTo.index();
    public static final int TOTALROLLS = AttributesEnum.TotalRolls.index();
    public static final int TOTALYRDS = AttributesEnum.TotalYrds.index();
    public static final int REAMARKS = AttributesEnum.Reamarks.index();
    public static final int MNJMFGFABINSPTRNALOCD = AttributesEnum.MnjMfgFabinsPtrnalocD.index();
    public static final int MNJMFGFABINSPRODLEO = AttributesEnum.MnjMfgFabinsProdLEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgFabinsPtrnalocLImpl() {
    }

    /**
     * Gets the attribute value for AlocLineId, using the alias name AlocLineId.
     * @return the AlocLineId
     */
    public Number getAlocLineId() {
        return (Number)getAttributeInternal(ALOCLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AlocLineId.
     * @param value value to set the AlocLineId
     */
    public void setAlocLineId(Number value) {
        setAttributeInternal(ALOCLINEID, value);
    }

    /**
     * Gets the attribute value for ProdLId, using the alias name ProdLId.
     * @return the ProdLId
     */
    public Number getProdLId() {
        return (Number)getAttributeInternal(PRODLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProdLId.
     * @param value value to set the ProdLId
     */
    public void setProdLId(Number value) {
        setAttributeInternal(PRODLID, value);
    }

    /**
     * Gets the attribute value for ShrinkPattern, using the alias name ShrinkPattern.
     * @return the ShrinkPattern
     */
    public String getShrinkPattern() {
        return (String)getAttributeInternal(SHRINKPATTERN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShrinkPattern.
     * @param value value to set the ShrinkPattern
     */
    public void setShrinkPattern(String value) {
        setAttributeInternal(SHRINKPATTERN, value);
    }

    /**
     * Gets the attribute value for LengthWiseFrom, using the alias name LengthWiseFrom.
     * @return the LengthWiseFrom
     */
    public Number getLengthWiseFrom() {
        return (Number)getAttributeInternal(LENGTHWISEFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for LengthWiseFrom.
     * @param value value to set the LengthWiseFrom
     */
    public void setLengthWiseFrom(Number value) {
        setAttributeInternal(LENGTHWISEFROM, value);
    }

    /**
     * Gets the attribute value for LengthWiseTo, using the alias name LengthWiseTo.
     * @return the LengthWiseTo
     */
    public Number getLengthWiseTo() {
        return (Number)getAttributeInternal(LENGTHWISETO);
    }

    /**
     * Sets <code>value</code> as the attribute value for LengthWiseTo.
     * @param value value to set the LengthWiseTo
     */
    public void setLengthWiseTo(Number value) {
        setAttributeInternal(LENGTHWISETO, value);
    }

    /**
     * Gets the attribute value for WidthWiseFrom, using the alias name WidthWiseFrom.
     * @return the WidthWiseFrom
     */
    public Number getWidthWiseFrom() {
        return (Number)getAttributeInternal(WIDTHWISEFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for WidthWiseFrom.
     * @param value value to set the WidthWiseFrom
     */
    public void setWidthWiseFrom(Number value) {
        setAttributeInternal(WIDTHWISEFROM, value);
    }

    /**
     * Gets the attribute value for WidthWiseTo, using the alias name WidthWiseTo.
     * @return the WidthWiseTo
     */
    public Number getWidthWiseTo() {
        return (Number)getAttributeInternal(WIDTHWISETO);
    }

    /**
     * Sets <code>value</code> as the attribute value for WidthWiseTo.
     * @param value value to set the WidthWiseTo
     */
    public void setWidthWiseTo(Number value) {
        setAttributeInternal(WIDTHWISETO, value);
    }

    /**
     * Gets the attribute value for TotalRolls, using the alias name TotalRolls.
     * @return the TotalRolls
     */
    public Number getTotalRolls() {
        return (Number)getAttributeInternal(TOTALROLLS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalRolls.
     * @param value value to set the TotalRolls
     */
    public void setTotalRolls(Number value) {
        setAttributeInternal(TOTALROLLS, value);
    }

    /**
     * Gets the attribute value for TotalYrds, using the alias name TotalYrds.
     * @return the TotalYrds
     */
    public Number getTotalYrds() {
        return (Number)getAttributeInternal(TOTALYRDS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalYrds.
     * @param value value to set the TotalYrds
     */
    public void setTotalYrds(Number value) {
        setAttributeInternal(TOTALYRDS, value);
    }

    /**
     * Gets the attribute value for Reamarks, using the alias name Reamarks.
     * @return the Reamarks
     */
    public String getReamarks() {
        return (String)getAttributeInternal(REAMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Reamarks.
     * @param value value to set the Reamarks
     */
    public void setReamarks(String value) {
        setAttributeInternal(REAMARKS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnjMfgFabinsPtrnalocD() {
        return (RowIterator)getAttributeInternal(MNJMFGFABINSPTRNALOCD);
    }

    /**
     * @return the associated entity MnjMfgFabinsProdLEOImpl.
     */
    public MnjMfgFabinsProdLEOImpl getMnjMfgFabinsProdLEO() {
        return (MnjMfgFabinsProdLEOImpl)getAttributeInternal(MNJMFGFABINSPRODLEO);
    }

    /**
     * Sets <code>value</code> as the associated entity MnjMfgFabinsProdLEOImpl.
     */
    public void setMnjMfgFabinsProdLEO(MnjMfgFabinsProdLEOImpl value) {
        setAttributeInternal(MNJMFGFABINSPRODLEO, value);
    }

    /**
     * @param alocLineId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number alocLineId) {
        return new Key(new Object[]{alocLineId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.MnjMfgFabinsPtrnalocL");
        }
        return mDefinitionObject;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("MNJ_MFG_FABINS_PTRNALOC_L_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setAlocLineId(sVal);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

     /**
      * Add locking logic here.
      */
     //    public void lock() {
     //        super.lock();
     //    }
      public void lock() {
         try {
             super.lock();
         } catch (oracle.jbo.RowInconsistentException e) {
             if (e.getErrorCode().equals("25014")) {
                 super.lock();
             } else
                 throw e;
         }
     }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
