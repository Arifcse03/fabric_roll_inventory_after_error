package mnj.mfg.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 03 22:53:05 BDT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgFabinsSecndDImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DetailId {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getDetailId();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setDetailId((Number)value);
            }
        }
        ,
        LineId {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getLineId();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        RollNo {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getRollNo();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setRollNo((String)value);
            }
        }
        ,
        ActualLength {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getActualLength();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setActualLength((String)value);
            }
        }
        ,
        CutWidth {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getCutWidth();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setCutWidth((String)value);
            }
        }
        ,
        TotPenPoints {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getTotPenPoints();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setTotPenPoints((Number)value);
            }
        }
        ,
        TotPoints {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getTotPoints();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setTotPoints((Number)value);
            }
        }
        ,
        ShadeVar {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getShadeVar();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setShadeVar((String)value);
            }
        }
        ,
        Bowing {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getBowing();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setBowing((String)value);
            }
        }
        ,
        Skewing {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getSkewing();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setSkewing((String)value);
            }
        }
        ,
        RolAcptRej {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getRolAcptRej();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setRolAcptRej((String)value);
            }
        }
        ,
        Remarks {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getRemarks();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        HeaderId {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getHeaderId();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        ProdLId {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getProdLId();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setProdLId((Number)value);
            }
        }
        ,
        ActualLengthInch {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getActualLengthInch();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setActualLengthInch((String)value);
            }
        }
        ,
        SupplierRollNo {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getSupplierRollNo();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setSupplierRollNo((String)value);
            }
        }
        ,
        MnjMfgFabinsSecndD2 {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getMnjMfgFabinsSecndD2();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MnjMfgFabinsFirstDEO {
            public Object get(MnjMfgFabinsSecndDImpl obj) {
                return obj.getMnjMfgFabinsFirstDEO();
            }

            public void put(MnjMfgFabinsSecndDImpl obj, Object value) {
                obj.setMnjMfgFabinsFirstDEO((MnjMfgFabinsFirstDEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgFabinsSecndDImpl object);

        public abstract void put(MnjMfgFabinsSecndDImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    //public static final int MNJMFGFABRICINSTESTH = AttributesEnum.MnjMfgFabricInsTestH.index();


//    public static final int MNJMFGFABINSPRODLEO = AttributesEnum.MnjMfgFabinsProdLEO.index();


    public static final int DETAILID = AttributesEnum.DetailId.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int ROLLNO = AttributesEnum.RollNo.index();
    public static final int ACTUALLENGTH = AttributesEnum.ActualLength.index();
    public static final int CUTWIDTH = AttributesEnum.CutWidth.index();
    public static final int TOTPENPOINTS = AttributesEnum.TotPenPoints.index();
    public static final int TOTPOINTS = AttributesEnum.TotPoints.index();
    public static final int SHADEVAR = AttributesEnum.ShadeVar.index();
    public static final int BOWING = AttributesEnum.Bowing.index();
    public static final int SKEWING = AttributesEnum.Skewing.index();
    public static final int ROLACPTREJ = AttributesEnum.RolAcptRej.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int PRODLID = AttributesEnum.ProdLId.index();
    public static final int ACTUALLENGTHINCH = AttributesEnum.ActualLengthInch.index();
    public static final int SUPPLIERROLLNO = AttributesEnum.SupplierRollNo.index();
    public static final int MNJMFGFABINSSECNDD2 = AttributesEnum.MnjMfgFabinsSecndD2.index();
    public static final int MNJMFGFABINSFIRSTDEO = AttributesEnum.MnjMfgFabinsFirstDEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgFabinsSecndDImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.MnjMfgFabinsSecndD");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for DetailId, using the alias name DetailId.
     * @return the DetailId
     */
    public Number getDetailId() {
        return (Number)getAttributeInternal(DETAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DetailId.
     * @param value value to set the DetailId
     */
    public void setDetailId(Number value) {
        setAttributeInternal(DETAILID, value);
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for RollNo, using the alias name RollNo.
     * @return the RollNo
     */
    public String getRollNo() {
        return (String)getAttributeInternal(ROLLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for RollNo.
     * @param value value to set the RollNo
     */
    public void setRollNo(String value) {
        setAttributeInternal(ROLLNO, value);
    }

    /**
     * Gets the attribute value for ActualLength, using the alias name ActualLength.
     * @return the ActualLength
     */
    public String getActualLength() {
        return (String)getAttributeInternal(ACTUALLENGTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActualLength.
     * @param value value to set the ActualLength
     */
    public void setActualLength(String value) {
        setAttributeInternal(ACTUALLENGTH, value);
    }

    /**
     * Gets the attribute value for CutWidth, using the alias name CutWidth.
     * @return the CutWidth
     */
    public String getCutWidth() {
        return (String)getAttributeInternal(CUTWIDTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for CutWidth.
     * @param value value to set the CutWidth
     */
    public void setCutWidth(String value) {
        setAttributeInternal(CUTWIDTH, value);
    }

    /**
     * Gets the attribute value for TotPenPoints, using the alias name TotPenPoints.
     * @return the TotPenPoints
     */
    public Number getTotPenPoints() {
        return (Number)getAttributeInternal(TOTPENPOINTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotPenPoints.
     * @param value value to set the TotPenPoints
     */
    public void setTotPenPoints(Number value) {
        setAttributeInternal(TOTPENPOINTS, value);
    }

    /**
     * Gets the attribute value for TotPoints, using the alias name TotPoints.
     * @return the TotPoints
     */
    public Number getTotPoints() {
        return (Number)getAttributeInternal(TOTPOINTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotPoints.
     * @param value value to set the TotPoints
     */
    public void setTotPoints(Number value) {
        setAttributeInternal(TOTPOINTS, value);
    }

    /**
     * Gets the attribute value for ShadeVar, using the alias name ShadeVar.
     * @return the ShadeVar
     */
    public String getShadeVar() {
        return (String)getAttributeInternal(SHADEVAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShadeVar.
     * @param value value to set the ShadeVar
     */
    public void setShadeVar(String value) {
        setAttributeInternal(SHADEVAR, value);
    }

    /**
     * Gets the attribute value for Bowing, using the alias name Bowing.
     * @return the Bowing
     */
    public String getBowing() {
        return (String)getAttributeInternal(BOWING);
    }

    /**
     * Sets <code>value</code> as the attribute value for Bowing.
     * @param value value to set the Bowing
     */
    public void setBowing(String value) {
        setAttributeInternal(BOWING, value);
    }

    /**
     * Gets the attribute value for Skewing, using the alias name Skewing.
     * @return the Skewing
     */
    public String getSkewing() {
        return (String)getAttributeInternal(SKEWING);
    }

    /**
     * Sets <code>value</code> as the attribute value for Skewing.
     * @param value value to set the Skewing
     */
    public void setSkewing(String value) {
        setAttributeInternal(SKEWING, value);
    }

    /**
     * Gets the attribute value for RolAcptRej, using the alias name RolAcptRej.
     * @return the RolAcptRej
     */
    public String getRolAcptRej() {
        return (String)getAttributeInternal(ROLACPTREJ);
    }

    /**
     * Sets <code>value</code> as the attribute value for RolAcptRej.
     * @param value value to set the RolAcptRej
     */
    public void setRolAcptRej(String value) {
        setAttributeInternal(ROLACPTREJ, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for ProdLId, using the alias name ProdLId.
     * @return the ProdLId
     */
    public Number getProdLId() {
        return (Number)getAttributeInternal(PRODLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProdLId.
     * @param value value to set the ProdLId
     */
    public void setProdLId(Number value) {
        setAttributeInternal(PRODLID, value);
    }

    /**
     * Gets the attribute value for ActualLengthInch, using the alias name ActualLengthInch.
     * @return the ActualLengthInch
     */
    public String getActualLengthInch() {
        return (String)getAttributeInternal(ACTUALLENGTHINCH);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActualLengthInch.
     * @param value value to set the ActualLengthInch
     */
    public void setActualLengthInch(String value) {
        setAttributeInternal(ACTUALLENGTHINCH, value);
    }

    /**
     * Gets the attribute value for SupplierRollNo, using the alias name SupplierRollNo.
     * @return the SupplierRollNo
     */
    public String getSupplierRollNo() {
        return (String)getAttributeInternal(SUPPLIERROLLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SupplierRollNo.
     * @param value value to set the SupplierRollNo
     */
    public void setSupplierRollNo(String value) {
        setAttributeInternal(SUPPLIERROLLNO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnjMfgFabinsSecndD2() {
        return (RowIterator)getAttributeInternal(MNJMFGFABINSSECNDD2);
    }

    /**
     * @return the associated entity MnjMfgFabinsFirstDEOImpl.
     */
    public MnjMfgFabinsFirstDEOImpl getMnjMfgFabinsFirstDEO() {
        return (MnjMfgFabinsFirstDEOImpl)getAttributeInternal(MNJMFGFABINSFIRSTDEO);
    }

    /**
     * Sets <code>value</code> as the associated entity MnjMfgFabinsFirstDEOImpl.
     */
    public void setMnjMfgFabinsFirstDEO(MnjMfgFabinsFirstDEOImpl value) {
        setAttributeInternal(MNJMFGFABINSFIRSTDEO, value);
    }


    /**
     * @return the associated entity MnjMfgFabinsProdLEOImpl.
     */
//    public MnjMfgFabinsProdLEOImpl getMnjMfgFabinsProdLEO() {
//        return (MnjMfgFabinsProdLEOImpl)getAttributeInternal(MNJMFGFABINSPRODLEO);
//    }
//
//    /**
//     * Sets <code>value</code> as the associated entity MnjMfgFabinsProdLEOImpl.
//     */
//    public void setMnjMfgFabinsProdLEO(MnjMfgFabinsProdLEOImpl value) {
//        setAttributeInternal(MNJMFGFABINSPRODLEO, value);
//    }


    /**
     * @return the associated entity MnjMfgFabricInsTestHImpl.
     */
//    public MnjMfgFabricInsTestHImpl getMnjMfgFabricInsTestH() {
//        return (MnjMfgFabricInsTestHImpl)getAttributeInternal(MNJMFGFABRICINSTESTH);
//    }

    /**
     * Sets <code>value</code> as the associated entity MnjMfgFabricInsTestHImpl.
     */
//    public void setMnjMfgFabricInsTestH(MnjMfgFabricInsTestHImpl value) {
//        setAttributeInternal(MNJMFGFABRICINSTESTH, value);
//    }


    /**
     * @param detailId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number detailId) {
        return new Key(new Object[]{detailId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =
            new oracle.jbo.server.SequenceImpl("MNJ_MFG_FABINS_SECND_D_S",
                                               getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setDetailId(sVal);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

     /**
      * Add locking logic here.
      */
     //    public void lock() {
     //        super.lock();
     //    }
      public void lock() {
         try {
             super.lock();
         } catch (oracle.jbo.RowInconsistentException e) {
             if (e.getErrorCode().equals("25014")) {
                 super.lock();
             } else
                 throw e;
         }
     }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
