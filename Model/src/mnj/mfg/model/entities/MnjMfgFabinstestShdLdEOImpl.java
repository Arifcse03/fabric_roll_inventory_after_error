package mnj.mfg.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 04 18:40:26 BDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgFabinstestShdLdEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DetailId {
            public Object get(MnjMfgFabinstestShdLdEOImpl obj) {
                return obj.getDetailId();
            }

            public void put(MnjMfgFabinstestShdLdEOImpl obj, Object value) {
                obj.setDetailId((Number)value);
            }
        }
        ,
        LineId {
            public Object get(MnjMfgFabinstestShdLdEOImpl obj) {
                return obj.getLineId();
            }

            public void put(MnjMfgFabinstestShdLdEOImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        RollNo {
            public Object get(MnjMfgFabinstestShdLdEOImpl obj) {
                return obj.getRollNo();
            }

            public void put(MnjMfgFabinstestShdLdEOImpl obj, Object value) {
                obj.setRollNo((String)value);
            }
        }
        ,
        SupplierRollNo {
            public Object get(MnjMfgFabinstestShdLdEOImpl obj) {
                return obj.getSupplierRollNo();
            }

            public void put(MnjMfgFabinstestShdLdEOImpl obj, Object value) {
                obj.setSupplierRollNo((String)value);
            }
        }
        ,
        MnjMfgFabricInsTestShdL {
            public Object get(MnjMfgFabinstestShdLdEOImpl obj) {
                return obj.getMnjMfgFabricInsTestShdL();
            }

            public void put(MnjMfgFabinstestShdLdEOImpl obj, Object value) {
                obj.setMnjMfgFabricInsTestShdL((MnjMfgFabricInsTestShdLImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgFabinstestShdLdEOImpl object);

        public abstract void put(MnjMfgFabinstestShdLdEOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int DETAILID = AttributesEnum.DetailId.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int ROLLNO = AttributesEnum.RollNo.index();
    public static final int SUPPLIERROLLNO = AttributesEnum.SupplierRollNo.index();
    public static final int MNJMFGFABRICINSTESTSHDL = AttributesEnum.MnjMfgFabricInsTestShdL.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgFabinstestShdLdEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.MnjMfgFabinstestShdLdEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for DetailId, using the alias name DetailId.
     * @return the DetailId
     */
    public Number getDetailId() {
        return (Number)getAttributeInternal(DETAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DetailId.
     * @param value value to set the DetailId
     */
    public void setDetailId(Number value) {
        setAttributeInternal(DETAILID, value);
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for RollNo, using the alias name RollNo.
     * @return the RollNo
     */
    public String getRollNo() {
        return (String)getAttributeInternal(ROLLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for RollNo.
     * @param value value to set the RollNo
     */
    public void setRollNo(String value) {
        setAttributeInternal(ROLLNO, value);
    }

    /**
     * Gets the attribute value for SupplierRollNo, using the alias name SupplierRollNo.
     * @return the SupplierRollNo
     */
    public String getSupplierRollNo() {
        return (String)getAttributeInternal(SUPPLIERROLLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SupplierRollNo.
     * @param value value to set the SupplierRollNo
     */
    public void setSupplierRollNo(String value) {
        setAttributeInternal(SUPPLIERROLLNO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MnjMfgFabricInsTestShdLImpl.
     */
    public MnjMfgFabricInsTestShdLImpl getMnjMfgFabricInsTestShdL() {
        return (MnjMfgFabricInsTestShdLImpl)getAttributeInternal(MNJMFGFABRICINSTESTSHDL);
    }

    /**
     * Sets <code>value</code> as the associated entity MnjMfgFabricInsTestShdLImpl.
     */
    public void setMnjMfgFabricInsTestShdL(MnjMfgFabricInsTestShdLImpl value) {
        setAttributeInternal(MNJMFGFABRICINSTESTSHDL, value);
    }


    /**
     * @param detailId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number detailId) {
        return new Key(new Object[]{detailId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("MNJ_MFG_FABINSTEST_SHD_LD_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setDetailId(sVal);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

     /**
      * Add locking logic here.
      */
     //    public void lock() {
     //        super.lock();
     //    }
      public void lock() {
         try {
             super.lock();
         } catch (oracle.jbo.RowInconsistentException e) {
             if (e.getErrorCode().equals("25014")) {
                 super.lock();
             } else
                 throw e;
         }
     }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
