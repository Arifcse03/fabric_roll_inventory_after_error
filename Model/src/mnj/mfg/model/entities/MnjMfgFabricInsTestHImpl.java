package mnj.mfg.model.entities;

import java.sql.CallableStatement;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;

import oracle.jdbc.OracleTypes;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 17 20:45:58 BDT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgFabricInsTestHImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        HeaderId {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getHeaderId();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        ReceiveNo {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getReceiveNo();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setReceiveNo((String)value);
            }
        }
        ,
        InvoiceNo {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getInvoiceNo();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setInvoiceNo((String)value);
            }
        }
        ,
        Color {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getColor();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setColor((String)value);
            }
        }
        ,
        BuyerId {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getBuyerId();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setBuyerId((Number)value);
            }
        }
        ,
        StyleName {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getStyleName();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setStyleName((String)value);
            }
        }
        ,
        Season {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getSeason();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setSeason((String)value);
            }
        }
        ,
        DateOfGrn {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getDateOfGrn();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setDateOfGrn((Date)value);
            }
        }
        ,
        UpdateOn {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getUpdateOn();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setUpdateOn((Date)value);
            }
        }
        ,
        BwWidthCm {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getBwWidthCm();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setBwWidthCm((Number)value);
            }
        }
        ,
        BwLengthCm {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getBwLengthCm();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setBwLengthCm((Number)value);
            }
        }
        ,
        Department {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getDepartment();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setDepartment((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getCreationDate();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        RespId {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getRespId();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setRespId((Number)value);
            }
        }
        ,
        RespApplId {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getRespApplId();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setRespApplId((Number)value);
            }
        }
        ,
        OrgId {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getOrgId();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setOrgId((Number)value);
            }
        }
        ,
        HeaderNo {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getHeaderNo();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setHeaderNo((String)value);
            }
        }
        ,
        InspectionNo {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getInspectionNo();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setInspectionNo((String)value);
            }
        }
        ,
        TotalRolRcv {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getTotalRolRcv();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setTotalRolRcv((Number)value);
            }
        }
        ,
        TotalRcvQty {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getTotalRcvQty();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setTotalRcvQty((Number)value);
            }
        }
        ,
        NoOfRolChkd {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getNoOfRolChkd();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setNoOfRolChkd((Number)value);
            }
        }
        ,
        NoChkdQty {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getNoChkdQty();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setNoChkdQty((Number)value);
            }
        }
        ,
        AvgCutWidth {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getAvgCutWidth();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setAvgCutWidth((Number)value);
            }
        }
        ,
        TotPnltyPnts {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getTotPnltyPnts();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setTotPnltyPnts((Number)value);
            }
        }
        ,
        TotPoints {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getTotPoints();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setTotPoints((Number)value);
            }
        }
        ,
        PasFail {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getPasFail();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setPasFail((String)value);
            }
        }
        ,
        ActionReqFail {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getActionReqFail();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setActionReqFail((String)value);
            }
        }
        ,
        Remarks {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getRemarks();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        VendorName {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getVendorName();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setVendorName((String)value);
            }
        }
        ,
        GrnDates {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getGrnDates();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setGrnDates((String)value);
            }
        }
        ,
        UnitName {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getUnitName();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setUnitName((String)value);
            }
        }
        ,
        GrnOrInvoice {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getGrnOrInvoice();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setGrnOrInvoice((String)value);
            }
        }
        ,
        RollTransferOrg {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getRollTransferOrg();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setRollTransferOrg((Number)value);
            }
        }
        ,
        Lot {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getLot();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setLot((String)value);
            }
        }
        ,
        TransferDoc {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getTransferDoc();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setTransferDoc((String)value);
            }
        }
        ,
        VendorId {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getVendorId();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setVendorId((Number)value);
            }
        }
        ,
        MnjMfgFabinsInvlEO {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getMnjMfgFabinsInvlEO();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MnjMfgFabinsProdLEO {
            public Object get(MnjMfgFabricInsTestHImpl obj) {
                return obj.getMnjMfgFabinsProdLEO();
            }

            public void put(MnjMfgFabricInsTestHImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgFabricInsTestHImpl object);

        public abstract void put(MnjMfgFabricInsTestHImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int RECEIVENO = AttributesEnum.ReceiveNo.index();
    public static final int INVOICENO = AttributesEnum.InvoiceNo.index();
    public static final int COLOR = AttributesEnum.Color.index();
    public static final int BUYERID = AttributesEnum.BuyerId.index();
    public static final int STYLENAME = AttributesEnum.StyleName.index();
    public static final int SEASON = AttributesEnum.Season.index();
    public static final int DATEOFGRN = AttributesEnum.DateOfGrn.index();
    public static final int UPDATEON = AttributesEnum.UpdateOn.index();
    public static final int BWWIDTHCM = AttributesEnum.BwWidthCm.index();
    public static final int BWLENGTHCM = AttributesEnum.BwLengthCm.index();
    public static final int DEPARTMENT = AttributesEnum.Department.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int RESPID = AttributesEnum.RespId.index();
    public static final int RESPAPPLID = AttributesEnum.RespApplId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HEADERNO = AttributesEnum.HeaderNo.index();
    public static final int INSPECTIONNO = AttributesEnum.InspectionNo.index();
    public static final int TOTALROLRCV = AttributesEnum.TotalRolRcv.index();
    public static final int TOTALRCVQTY = AttributesEnum.TotalRcvQty.index();
    public static final int NOOFROLCHKD = AttributesEnum.NoOfRolChkd.index();
    public static final int NOCHKDQTY = AttributesEnum.NoChkdQty.index();
    public static final int AVGCUTWIDTH = AttributesEnum.AvgCutWidth.index();
    public static final int TOTPNLTYPNTS = AttributesEnum.TotPnltyPnts.index();
    public static final int TOTPOINTS = AttributesEnum.TotPoints.index();
    public static final int PASFAIL = AttributesEnum.PasFail.index();
    public static final int ACTIONREQFAIL = AttributesEnum.ActionReqFail.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int VENDORNAME = AttributesEnum.VendorName.index();
    public static final int GRNDATES = AttributesEnum.GrnDates.index();
    public static final int UNITNAME = AttributesEnum.UnitName.index();
    public static final int GRNORINVOICE = AttributesEnum.GrnOrInvoice.index();
    public static final int ROLLTRANSFERORG = AttributesEnum.RollTransferOrg.index();
    public static final int LOT = AttributesEnum.Lot.index();
    public static final int TRANSFERDOC = AttributesEnum.TransferDoc.index();
    public static final int VENDORID = AttributesEnum.VendorId.index();
    public static final int MNJMFGFABINSINVLEO = AttributesEnum.MnjMfgFabinsInvlEO.index();
    public static final int MNJMFGFABINSPRODLEO = AttributesEnum.MnjMfgFabinsProdLEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgFabricInsTestHImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.MnjMfgFabricInsTestH");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for ReceiveNo, using the alias name ReceiveNo.
     * @return the ReceiveNo
     */
    public String getReceiveNo() {
        return (String)getAttributeInternal(RECEIVENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceiveNo.
     * @param value value to set the ReceiveNo
     */
    public void setReceiveNo(String value) {
        setAttributeInternal(RECEIVENO, value);
    }

    /**
     * Gets the attribute value for InvoiceNo, using the alias name InvoiceNo.
     * @return the InvoiceNo
     */
    public String getInvoiceNo() {
        return (String)getAttributeInternal(INVOICENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for InvoiceNo.
     * @param value value to set the InvoiceNo
     */
    public void setInvoiceNo(String value) {
        setAttributeInternal(INVOICENO, value);
    }

    /**
     * Gets the attribute value for Color, using the alias name Color.
     * @return the Color
     */
    public String getColor() {
        return (String)getAttributeInternal(COLOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Color.
     * @param value value to set the Color
     */
    public void setColor(String value) {
        setAttributeInternal(COLOR, value);
    }

    /**
     * Gets the attribute value for BuyerId, using the alias name BuyerId.
     * @return the BuyerId
     */
    public Number getBuyerId() {
        return (Number)getAttributeInternal(BUYERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuyerId.
     * @param value value to set the BuyerId
     */
    public void setBuyerId(Number value) {
        setAttributeInternal(BUYERID, value);
    }

    /**
     * Gets the attribute value for StyleName, using the alias name StyleName.
     * @return the StyleName
     */
    public String getStyleName() {
        return (String)getAttributeInternal(STYLENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for StyleName.
     * @param value value to set the StyleName
     */
    public void setStyleName(String value) {
        setAttributeInternal(STYLENAME, value);
    }

    /**
     * Gets the attribute value for Season, using the alias name Season.
     * @return the Season
     */
    public String getSeason() {
        return (String)getAttributeInternal(SEASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for Season.
     * @param value value to set the Season
     */
    public void setSeason(String value) {
        setAttributeInternal(SEASON, value);
    }

    /**
     * Gets the attribute value for DateOfGrn, using the alias name DateOfGrn.
     * @return the DateOfGrn
     */
    public Date getDateOfGrn() {
        return (Date)getAttributeInternal(DATEOFGRN);
    }

    /**
     * Sets <code>value</code> as the attribute value for DateOfGrn.
     * @param value value to set the DateOfGrn
     */
    public void setDateOfGrn(Date value) {
        setAttributeInternal(DATEOFGRN, value);
    }

    /**
     * Gets the attribute value for UpdateOn, using the alias name UpdateOn.
     * @return the UpdateOn
     */
    public Date getUpdateOn() {
        return (Date)getAttributeInternal(UPDATEON);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdateOn.
     * @param value value to set the UpdateOn
     */
    public void setUpdateOn(Date value) {
        setAttributeInternal(UPDATEON, value);
    }

    /**
     * Gets the attribute value for BwWidthCm, using the alias name BwWidthCm.
     * @return the BwWidthCm
     */
    public Number getBwWidthCm() {
        return (Number)getAttributeInternal(BWWIDTHCM);
    }

    /**
     * Sets <code>value</code> as the attribute value for BwWidthCm.
     * @param value value to set the BwWidthCm
     */
    public void setBwWidthCm(Number value) {
        setAttributeInternal(BWWIDTHCM, value);
    }

    /**
     * Gets the attribute value for BwLengthCm, using the alias name BwLengthCm.
     * @return the BwLengthCm
     */
    public Number getBwLengthCm() {
        return (Number)getAttributeInternal(BWLENGTHCM);
    }

    /**
     * Sets <code>value</code> as the attribute value for BwLengthCm.
     * @param value value to set the BwLengthCm
     */
    public void setBwLengthCm(Number value) {
        setAttributeInternal(BWLENGTHCM, value);
    }

    /**
     * Gets the attribute value for Department, using the alias name Department.
     * @return the Department
     */
    public String getDepartment() {
        return (String)getAttributeInternal(DEPARTMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Department.
     * @param value value to set the Department
     */
    public void setDepartment(String value) {
        setAttributeInternal(DEPARTMENT, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for RespId, using the alias name RespId.
     * @return the RespId
     */
    public Number getRespId() {
        return (Number)getAttributeInternal(RESPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RespId.
     * @param value value to set the RespId
     */
    public void setRespId(Number value) {
        setAttributeInternal(RESPID, value);
    }

    /**
     * Gets the attribute value for RespApplId, using the alias name RespApplId.
     * @return the RespApplId
     */
    public Number getRespApplId() {
        return (Number)getAttributeInternal(RESPAPPLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RespApplId.
     * @param value value to set the RespApplId
     */
    public void setRespApplId(Number value) {
        setAttributeInternal(RESPAPPLID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the OrgId
     */
    public Number getOrgId() {
        return (Number)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(Number value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HeaderNo, using the alias name HeaderNo.
     * @return the HeaderNo
     */
    public String getHeaderNo() {
        return (String)getAttributeInternal(HEADERNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderNo.
     * @param value value to set the HeaderNo
     */
    public void setHeaderNo(String value) {
        setAttributeInternal(HEADERNO, value);
    }

    /**
     * Gets the attribute value for InspectionNo, using the alias name InspectionNo.
     * @return the InspectionNo
     */
    public String getInspectionNo() {
        return (String)getAttributeInternal(INSPECTIONNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for InspectionNo.
     * @param value value to set the InspectionNo
     */
    public void setInspectionNo(String value) {
        setAttributeInternal(INSPECTIONNO, value);
    }

    /**
     * Gets the attribute value for TotalRolRcv, using the alias name TotalRolRcv.
     * @return the TotalRolRcv
     */
    public Number getTotalRolRcv() {
        return (Number)getAttributeInternal(TOTALROLRCV);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalRolRcv.
     * @param value value to set the TotalRolRcv
     */
    public void setTotalRolRcv(Number value) {
        setAttributeInternal(TOTALROLRCV, value);
    }

    /**
     * Gets the attribute value for TotalRcvQty, using the alias name TotalRcvQty.
     * @return the TotalRcvQty
     */
    public Number getTotalRcvQty() {
        return (Number)getAttributeInternal(TOTALRCVQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalRcvQty.
     * @param value value to set the TotalRcvQty
     */
    public void setTotalRcvQty(Number value) {
        setAttributeInternal(TOTALRCVQTY, value);
    }

    /**
     * Gets the attribute value for NoOfRolChkd, using the alias name NoOfRolChkd.
     * @return the NoOfRolChkd
     */
    public Number getNoOfRolChkd() {
        return (Number)getAttributeInternal(NOOFROLCHKD);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoOfRolChkd.
     * @param value value to set the NoOfRolChkd
     */
    public void setNoOfRolChkd(Number value) {
        setAttributeInternal(NOOFROLCHKD, value);
    }

    /**
     * Gets the attribute value for NoChkdQty, using the alias name NoChkdQty.
     * @return the NoChkdQty
     */
    public Number getNoChkdQty() {
        return (Number)getAttributeInternal(NOCHKDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoChkdQty.
     * @param value value to set the NoChkdQty
     */
    public void setNoChkdQty(Number value) {
        setAttributeInternal(NOCHKDQTY, value);
    }

    /**
     * Gets the attribute value for AvgCutWidth, using the alias name AvgCutWidth.
     * @return the AvgCutWidth
     */
    public Number getAvgCutWidth() {
        return (Number)getAttributeInternal(AVGCUTWIDTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for AvgCutWidth.
     * @param value value to set the AvgCutWidth
     */
    public void setAvgCutWidth(Number value) {
        setAttributeInternal(AVGCUTWIDTH, value);
    }

    /**
     * Gets the attribute value for TotPnltyPnts, using the alias name TotPnltyPnts.
     * @return the TotPnltyPnts
     */
    public Number getTotPnltyPnts() {
        return (Number)getAttributeInternal(TOTPNLTYPNTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotPnltyPnts.
     * @param value value to set the TotPnltyPnts
     */
    public void setTotPnltyPnts(Number value) {
        setAttributeInternal(TOTPNLTYPNTS, value);
    }

    /**
     * Gets the attribute value for TotPoints, using the alias name TotPoints.
     * @return the TotPoints
     */
    public Number getTotPoints() {
        return (Number)getAttributeInternal(TOTPOINTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotPoints.
     * @param value value to set the TotPoints
     */
    public void setTotPoints(Number value) {
        setAttributeInternal(TOTPOINTS, value);
    }

    /**
     * Gets the attribute value for PasFail, using the alias name PasFail.
     * @return the PasFail
     */
    public String getPasFail() {
        return (String)getAttributeInternal(PASFAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for PasFail.
     * @param value value to set the PasFail
     */
    public void setPasFail(String value) {
        setAttributeInternal(PASFAIL, value);
    }

    /**
     * Gets the attribute value for ActionReqFail, using the alias name ActionReqFail.
     * @return the ActionReqFail
     */
    public String getActionReqFail() {
        return (String)getAttributeInternal(ACTIONREQFAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActionReqFail.
     * @param value value to set the ActionReqFail
     */
    public void setActionReqFail(String value) {
        setAttributeInternal(ACTIONREQFAIL, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for VendorName, using the alias name VendorName.
     * @return the VendorName
     */
    public String getVendorName() {
        return (String)getAttributeInternal(VENDORNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for VendorName.
     * @param value value to set the VendorName
     */
    public void setVendorName(String value) {
        setAttributeInternal(VENDORNAME, value);
    }

    /**
     * Gets the attribute value for GrnDates, using the alias name GrnDates.
     * @return the GrnDates
     */
    public String getGrnDates() {
        return (String)getAttributeInternal(GRNDATES);
    }

    /**
     * Sets <code>value</code> as the attribute value for GrnDates.
     * @param value value to set the GrnDates
     */
    public void setGrnDates(String value) {
        setAttributeInternal(GRNDATES, value);
    }

    /**
     * Gets the attribute value for UnitName, using the alias name UnitName.
     * @return the UnitName
     */
    public String getUnitName() {
        return (String)getAttributeInternal(UNITNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for UnitName.
     * @param value value to set the UnitName
     */
    public void setUnitName(String value) {
        setAttributeInternal(UNITNAME, value);
    }

    /**
     * Gets the attribute value for GrnOrInvoice, using the alias name GrnOrInvoice.
     * @return the GrnOrInvoice
     */
    public String getGrnOrInvoice() {
        return (String)getAttributeInternal(GRNORINVOICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for GrnOrInvoice.
     * @param value value to set the GrnOrInvoice
     */
    public void setGrnOrInvoice(String value) {
        setAttributeInternal(GRNORINVOICE, value);
    }

    /**
     * Gets the attribute value for RollTransferOrg, using the alias name RollTransferOrg.
     * @return the RollTransferOrg
     */
    public Number getRollTransferOrg() {
        return (Number)getAttributeInternal(ROLLTRANSFERORG);
    }

    /**
     * Sets <code>value</code> as the attribute value for RollTransferOrg.
     * @param value value to set the RollTransferOrg
     */
    public void setRollTransferOrg(Number value) {
        setAttributeInternal(ROLLTRANSFERORG, value);
    }

    /**
     * Gets the attribute value for Lot, using the alias name Lot.
     * @return the Lot
     */
    public String getLot() {
        return (String)getAttributeInternal(LOT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Lot.
     * @param value value to set the Lot
     */
    public void setLot(String value) {
        setAttributeInternal(LOT, value);
    }

    /**
     * Gets the attribute value for TransferDoc, using the alias name TransferDoc.
     * @return the TransferDoc
     */
    public String getTransferDoc() {
        return (String)getAttributeInternal(TRANSFERDOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransferDoc.
     * @param value value to set the TransferDoc
     */
    public void setTransferDoc(String value) {
        setAttributeInternal(TRANSFERDOC, value);
    }

    /**
     * Gets the attribute value for VendorId, using the alias name VendorId.
     * @return the VendorId
     */
    public Number getVendorId() {
        return (Number)getAttributeInternal(VENDORID);
    }

    /**
     * Sets <code>value</code> as the attribute value for VendorId.
     * @param value value to set the VendorId
     */
    public void setVendorId(Number value) {
        setAttributeInternal(VENDORID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnjMfgFabinsInvlEO() {
        return (RowIterator)getAttributeInternal(MNJMFGFABINSINVLEO);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnjMfgFabinsProdLEO() {
        return (RowIterator)getAttributeInternal(MNJMFGFABINSPRODLEO);
    }


    /**
     * @param headerId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number headerId) {
        return new Key(new Object[]{headerId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =
            new oracle.jbo.server.SequenceImpl("MNJ_MFG_FABRIC_INS_TEST_H_S",
                                               getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setHeaderId(sVal);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    //    public void lock() {
    //        super.lock();
    //    }
     public void lock() {
        try {
            super.lock();
        } catch (oracle.jbo.RowInconsistentException e) {
            if (e.getErrorCode().equals("25014")) {
                super.lock();
            } else
                throw e;
        }
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {

        Map sessionScope = ADFContext.getCurrent().getSessionScope();
        String user = (String)sessionScope.get("userId");
       String orgId = (String)sessionScope.get("orgId");
       String unitName = (String)sessionScope.get("unitName");


        if (operation == DML_INSERT) {


            try {

                System.out.println(" getSrNoString "+getSrNoString());
               // System.out.println(" orgId "+orgId);
             //   System.out.println("unitName  "+unitName);
                
                setHeaderNo(getSrNoString());
                setOrgId(new oracle.jbo.domain.Number(orgId));
                setCreationDate((Date)Date.getCurrentDate());
                setCreatedBy(new oracle.jbo.domain.Number(user));
               setUnitName(unitName);


            } catch (SQLException f) {
                ;
            }


        } //end of if
        if (DML_UPDATE == operation) {
            try {
                setLastUpdateDate((Date)Date.getCurrentDate());
                setLastUpdatedBy(new oracle.jbo.domain.Number(user));
            } catch (SQLException f) {
                System.out.println(f.getMessage());
            }
        }


        super.doDML(operation, e);
    }


    public String getSrNoString() {
        String srno = null;
        String stmt =
            "BEGIN :1 := mnj_mfg_doc_no_pkg.fabric_ins_test_doc; end;";
        CallableStatement cs =
            getDBTransaction().createCallableStatement(stmt, 1);
        try {
            cs.registerOutParameter(1, OracleTypes.VARCHAR);
            cs.execute();
            srno = cs.getString(1);
            cs.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return srno;
    }
}
