package mnj.mfg.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 04 18:47:28 BDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgFabricInsTestShdLImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        LineId {
            public Object get(MnjMfgFabricInsTestShdLImpl obj) {
                return obj.getLineId();
            }

            public void put(MnjMfgFabricInsTestShdLImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        HeaderId {
            public Object get(MnjMfgFabricInsTestShdLImpl obj) {
                return obj.getHeaderId();
            }

            public void put(MnjMfgFabricInsTestShdLImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        RollNo {
            public Object get(MnjMfgFabricInsTestShdLImpl obj) {
                return obj.getRollNo();
            }

            public void put(MnjMfgFabricInsTestShdLImpl obj, Object value) {
                obj.setRollNo((String)value);
            }
        }
        ,
        Shade {
            public Object get(MnjMfgFabricInsTestShdLImpl obj) {
                return obj.getShade();
            }

            public void put(MnjMfgFabricInsTestShdLImpl obj, Object value) {
                obj.setShade((String)value);
            }
        }
        ,
        Remarks {
            public Object get(MnjMfgFabricInsTestShdLImpl obj) {
                return obj.getRemarks();
            }

            public void put(MnjMfgFabricInsTestShdLImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        Daf {
            public Object get(MnjMfgFabricInsTestShdLImpl obj) {
                return obj.getDaf();
            }

            public void put(MnjMfgFabricInsTestShdLImpl obj, Object value) {
                obj.setDaf((String)value);
            }
        }
        ,
        ProdLId {
            public Object get(MnjMfgFabricInsTestShdLImpl obj) {
                return obj.getProdLId();
            }

            public void put(MnjMfgFabricInsTestShdLImpl obj, Object value) {
                obj.setProdLId((Number)value);
            }
        }
        ,
        TotalRolls {
            public Object get(MnjMfgFabricInsTestShdLImpl obj) {
                return obj.getTotalRolls();
            }

            public void put(MnjMfgFabricInsTestShdLImpl obj, Object value) {
                obj.setTotalRolls((Number)value);
            }
        }
        ,
        SupplierRollNo {
            public Object get(MnjMfgFabricInsTestShdLImpl obj) {
                return obj.getSupplierRollNo();
            }

            public void put(MnjMfgFabricInsTestShdLImpl obj, Object value) {
                obj.setSupplierRollNo((String)value);
            }
        }
        ,
        MnjMfgFabinsProdLEO {
            public Object get(MnjMfgFabricInsTestShdLImpl obj) {
                return obj.getMnjMfgFabinsProdLEO();
            }

            public void put(MnjMfgFabricInsTestShdLImpl obj, Object value) {
                obj.setMnjMfgFabinsProdLEO((MnjMfgFabinsProdLEOImpl)value);
            }
        }
        ,
        MnjMfgFabinstestShdLdEO {
            public Object get(MnjMfgFabricInsTestShdLImpl obj) {
                return obj.getMnjMfgFabinstestShdLdEO();
            }

            public void put(MnjMfgFabricInsTestShdLImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgFabricInsTestShdLImpl object);

        public abstract void put(MnjMfgFabricInsTestShdLImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int ROLLNO = AttributesEnum.RollNo.index();
    public static final int SHADE = AttributesEnum.Shade.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int DAF = AttributesEnum.Daf.index();
    public static final int PRODLID = AttributesEnum.ProdLId.index();
    public static final int TOTALROLLS = AttributesEnum.TotalRolls.index();
    public static final int SUPPLIERROLLNO = AttributesEnum.SupplierRollNo.index();
    public static final int MNJMFGFABINSPRODLEO = AttributesEnum.MnjMfgFabinsProdLEO.index();
    public static final int MNJMFGFABINSTESTSHDLDEO = AttributesEnum.MnjMfgFabinstestShdLdEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgFabricInsTestShdLImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.MnjMfgFabricInsTestShdL");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for RollNo, using the alias name RollNo.
     * @return the RollNo
     */
    public String getRollNo() {
        return (String)getAttributeInternal(ROLLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for RollNo.
     * @param value value to set the RollNo
     */
    public void setRollNo(String value) {
        setAttributeInternal(ROLLNO, value);
    }

    /**
     * Gets the attribute value for Shade, using the alias name Shade.
     * @return the Shade
     */
    public String getShade() {
        return (String)getAttributeInternal(SHADE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Shade.
     * @param value value to set the Shade
     */
    public void setShade(String value) {
        setAttributeInternal(SHADE, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for Daf, using the alias name Daf.
     * @return the Daf
     */
    public String getDaf() {
        return (String)getAttributeInternal(DAF);
    }

    /**
     * Sets <code>value</code> as the attribute value for Daf.
     * @param value value to set the Daf
     */
    public void setDaf(String value) {
        setAttributeInternal(DAF, value);
    }

    /**
     * Gets the attribute value for ProdLId, using the alias name ProdLId.
     * @return the ProdLId
     */
    public Number getProdLId() {
        return (Number)getAttributeInternal(PRODLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProdLId.
     * @param value value to set the ProdLId
     */
    public void setProdLId(Number value) {
        setAttributeInternal(PRODLID, value);
    }

    /**
     * Gets the attribute value for TotalRolls, using the alias name TotalRolls.
     * @return the TotalRolls
     */
    public Number getTotalRolls() {
        return (Number)getAttributeInternal(TOTALROLLS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalRolls.
     * @param value value to set the TotalRolls
     */
    public void setTotalRolls(Number value) {
        setAttributeInternal(TOTALROLLS, value);
    }

    /**
     * Gets the attribute value for SupplierRollNo, using the alias name SupplierRollNo.
     * @return the SupplierRollNo
     */
    public String getSupplierRollNo() {
        return (String)getAttributeInternal(SUPPLIERROLLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SupplierRollNo.
     * @param value value to set the SupplierRollNo
     */
    public void setSupplierRollNo(String value) {
        setAttributeInternal(SUPPLIERROLLNO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MnjMfgFabinsProdLEOImpl.
     */
    public MnjMfgFabinsProdLEOImpl getMnjMfgFabinsProdLEO() {
        return (MnjMfgFabinsProdLEOImpl)getAttributeInternal(MNJMFGFABINSPRODLEO);
    }

    /**
     * Sets <code>value</code> as the associated entity MnjMfgFabinsProdLEOImpl.
     */
    public void setMnjMfgFabinsProdLEO(MnjMfgFabinsProdLEOImpl value) {
        setAttributeInternal(MNJMFGFABINSPRODLEO, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnjMfgFabinstestShdLdEO() {
        return (RowIterator)getAttributeInternal(MNJMFGFABINSTESTSHDLDEO);
    }


    /**
     * @param lineId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number lineId) {
        return new Key(new Object[]{lineId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s = new oracle.jbo.server.SequenceImpl("MNJ_MFG_FAB_INS_TEST_SHD_L_S",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setLineId(sVal);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

     /**
      * Add locking logic here.
      */
     //    public void lock() {
     //        super.lock();
     //    }
      public void lock() {
         try {
             super.lock();
         } catch (oracle.jbo.RowInconsistentException e) {
             if (e.getErrorCode().equals("25014")) {
                 super.lock();
             } else
                 throw e;
         }
     }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
