package mnj.mfg.model.views;

import mnj.mfg.model.entities.MnjMfgFabricInsTestShdLImpl;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 18 11:51:18 BDT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FabricShadeLineRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        LineId {
            public Object get(FabricShadeLineRowImpl obj) {
                return obj.getLineId();
            }

            public void put(FabricShadeLineRowImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        HeaderId {
            public Object get(FabricShadeLineRowImpl obj) {
                return obj.getHeaderId();
            }

            public void put(FabricShadeLineRowImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        RollNo {
            public Object get(FabricShadeLineRowImpl obj) {
                return obj.getRollNo();
            }

            public void put(FabricShadeLineRowImpl obj, Object value) {
                obj.setRollNo((String)value);
            }
        }
        ,
        Shade {
            public Object get(FabricShadeLineRowImpl obj) {
                return obj.getShade();
            }

            public void put(FabricShadeLineRowImpl obj, Object value) {
                obj.setShade((String)value);
            }
        }
        ,
        Remarks {
            public Object get(FabricShadeLineRowImpl obj) {
                return obj.getRemarks();
            }

            public void put(FabricShadeLineRowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        Daf {
            public Object get(FabricShadeLineRowImpl obj) {
                return obj.getDaf();
            }

            public void put(FabricShadeLineRowImpl obj, Object value) {
                obj.setDaf((String)value);
            }
        }
        ,
        ProdLId {
            public Object get(FabricShadeLineRowImpl obj) {
                return obj.getProdLId();
            }

            public void put(FabricShadeLineRowImpl obj, Object value) {
                obj.setProdLId((Number)value);
            }
        }
        ,
        TotalRolls {
            public Object get(FabricShadeLineRowImpl obj) {
                return obj.getTotalRolls();
            }

            public void put(FabricShadeLineRowImpl obj, Object value) {
                obj.setTotalRolls((Number)value);
            }
        }
        ,
        ProdPageShedDetVO {
            public Object get(FabricShadeLineRowImpl obj) {
                return obj.getProdPageShedDetVO();
            }

            public void put(FabricShadeLineRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ShadeVO1 {
            public Object get(FabricShadeLineRowImpl obj) {
                return obj.getShadeVO1();
            }

            public void put(FabricShadeLineRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(FabricShadeLineRowImpl object);

        public abstract void put(FabricShadeLineRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int ROLLNO = AttributesEnum.RollNo.index();
    public static final int SHADE = AttributesEnum.Shade.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int DAF = AttributesEnum.Daf.index();
    public static final int PRODLID = AttributesEnum.ProdLId.index();
    public static final int TOTALROLLS = AttributesEnum.TotalRolls.index();
    public static final int PRODPAGESHEDDETVO = AttributesEnum.ProdPageShedDetVO.index();
    public static final int SHADEVO1 = AttributesEnum.ShadeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FabricShadeLineRowImpl() {
    }

    /**
     * Gets MnjMfgFabricInsTestShdL entity object.
     * @return the MnjMfgFabricInsTestShdL
     */
    public MnjMfgFabricInsTestShdLImpl getMnjMfgFabricInsTestShdL() {
        return (MnjMfgFabricInsTestShdLImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for LINE_ID using the alias name LineId.
     * @return the LINE_ID
     */
    public Number getLineId() {
        return (Number) getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for LINE_ID using the alias name LineId.
     * @param value value to set the LINE_ID
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for HEADER_ID using the alias name HeaderId.
     * @return the HEADER_ID
     */
    public Number getHeaderId() {
        return (Number) getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for HEADER_ID using the alias name HeaderId.
     * @param value value to set the HEADER_ID
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for ROLL_NO using the alias name RollNo.
     * @return the ROLL_NO
     */
    public String getRollNo() {
        return (String) getAttributeInternal(ROLLNO);
    }

    /**
     * Sets <code>value</code> as attribute value for ROLL_NO using the alias name RollNo.
     * @param value value to set the ROLL_NO
     */
    public void setRollNo(String value) {
        setAttributeInternal(ROLLNO, value);
    }

    /**
     * Gets the attribute value for SHADE using the alias name Shade.
     * @return the SHADE
     */
    public String getShade() {
        return (String) getAttributeInternal(SHADE);
    }

    /**
     * Sets <code>value</code> as attribute value for SHADE using the alias name Shade.
     * @param value value to set the SHADE
     */
    public void setShade(String value) {
        setAttributeInternal(SHADE, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for DAF using the alias name Daf.
     * @return the DAF
     */
    public String getDaf() {
        return (String) getAttributeInternal(DAF);
    }

    /**
     * Sets <code>value</code> as attribute value for DAF using the alias name Daf.
     * @param value value to set the DAF
     */
    public void setDaf(String value) {
        setAttributeInternal(DAF, value);
    }

    /**
     * Gets the attribute value for PROD_L_ID using the alias name ProdLId.
     * @return the PROD_L_ID
     */
    public Number getProdLId() {
        return (Number) getAttributeInternal(PRODLID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROD_L_ID using the alias name ProdLId.
     * @param value value to set the PROD_L_ID
     */
    public void setProdLId(Number value) {
        setAttributeInternal(PRODLID, value);
    }

    /**
     * Gets the attribute value for TOTAL_ROLLS using the alias name TotalRolls.
     * @return the TOTAL_ROLLS
     */
    public Number getTotalRolls() {
        return (Number) getAttributeInternal(TOTALROLLS);
    }

    /**
     * Sets <code>value</code> as attribute value for TOTAL_ROLLS using the alias name TotalRolls.
     * @param value value to set the TOTAL_ROLLS
     */
    public void setTotalRolls(Number value) {
        setAttributeInternal(TOTALROLLS, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ProdPageShedDetVO.
     */
    public RowIterator getProdPageShedDetVO() {
        return (RowIterator)getAttributeInternal(PRODPAGESHEDDETVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ShadeVO1.
     */
    public RowSet getShadeVO1() {
        return (RowSet)getAttributeInternal(SHADEVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

}
