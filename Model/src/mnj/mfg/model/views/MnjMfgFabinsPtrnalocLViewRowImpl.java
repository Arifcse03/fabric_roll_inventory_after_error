package mnj.mfg.model.views;

import mnj.mfg.model.entities.MnjMfgFabinsPtrnalocLImpl;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu May 12 12:23:50 BDT 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgFabinsPtrnalocLViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AlocLineId {
            public Object get(MnjMfgFabinsPtrnalocLViewRowImpl obj) {
                return obj.getAlocLineId();
            }

            public void put(MnjMfgFabinsPtrnalocLViewRowImpl obj,
                            Object value) {
                obj.setAlocLineId((Number)value);
            }
        }
        ,
        ProdLId {
            public Object get(MnjMfgFabinsPtrnalocLViewRowImpl obj) {
                return obj.getProdLId();
            }

            public void put(MnjMfgFabinsPtrnalocLViewRowImpl obj,
                            Object value) {
                obj.setProdLId((Number)value);
            }
        }
        ,
        ShrinkPattern {
            public Object get(MnjMfgFabinsPtrnalocLViewRowImpl obj) {
                return obj.getShrinkPattern();
            }

            public void put(MnjMfgFabinsPtrnalocLViewRowImpl obj,
                            Object value) {
                obj.setShrinkPattern((String)value);
            }
        }
        ,
        LengthWiseFrom {
            public Object get(MnjMfgFabinsPtrnalocLViewRowImpl obj) {
                return obj.getLengthWiseFrom();
            }

            public void put(MnjMfgFabinsPtrnalocLViewRowImpl obj,
                            Object value) {
                obj.setLengthWiseFrom((Number)value);
            }
        }
        ,
        LengthWiseTo {
            public Object get(MnjMfgFabinsPtrnalocLViewRowImpl obj) {
                return obj.getLengthWiseTo();
            }

            public void put(MnjMfgFabinsPtrnalocLViewRowImpl obj,
                            Object value) {
                obj.setLengthWiseTo((Number)value);
            }
        }
        ,
        WidthWiseFrom {
            public Object get(MnjMfgFabinsPtrnalocLViewRowImpl obj) {
                return obj.getWidthWiseFrom();
            }

            public void put(MnjMfgFabinsPtrnalocLViewRowImpl obj,
                            Object value) {
                obj.setWidthWiseFrom((Number)value);
            }
        }
        ,
        WidthWiseTo {
            public Object get(MnjMfgFabinsPtrnalocLViewRowImpl obj) {
                return obj.getWidthWiseTo();
            }

            public void put(MnjMfgFabinsPtrnalocLViewRowImpl obj,
                            Object value) {
                obj.setWidthWiseTo((Number)value);
            }
        }
        ,
        TotalRolls {
            public Object get(MnjMfgFabinsPtrnalocLViewRowImpl obj) {
                return obj.getTotalRolls();
            }

            public void put(MnjMfgFabinsPtrnalocLViewRowImpl obj,
                            Object value) {
                obj.setTotalRolls((Number)value);
            }
        }
        ,
        TotalYrds {
            public Object get(MnjMfgFabinsPtrnalocLViewRowImpl obj) {
                return obj.getTotalYrds();
            }

            public void put(MnjMfgFabinsPtrnalocLViewRowImpl obj,
                            Object value) {
                obj.setTotalYrds((Number)value);
            }
        }
        ,
        Reamarks {
            public Object get(MnjMfgFabinsPtrnalocLViewRowImpl obj) {
                return obj.getReamarks();
            }

            public void put(MnjMfgFabinsPtrnalocLViewRowImpl obj,
                            Object value) {
                obj.setReamarks((String)value);
            }
        }
        ,
        MnjMfgFabinsPtrnalocDView {
            public Object get(MnjMfgFabinsPtrnalocLViewRowImpl obj) {
                return obj.getMnjMfgFabinsPtrnalocDView();
            }

            public void put(MnjMfgFabinsPtrnalocLViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ShrinkPatternVO1 {
            public Object get(MnjMfgFabinsPtrnalocLViewRowImpl obj) {
                return obj.getShrinkPatternVO1();
            }

            public void put(MnjMfgFabinsPtrnalocLViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ShrinkPatternVO2 {
            public Object get(MnjMfgFabinsPtrnalocLViewRowImpl obj) {
                return obj.getShrinkPatternVO2();
            }

            public void put(MnjMfgFabinsPtrnalocLViewRowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgFabinsPtrnalocLViewRowImpl object);

        public abstract void put(MnjMfgFabinsPtrnalocLViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ALOCLINEID = AttributesEnum.AlocLineId.index();
    public static final int PRODLID = AttributesEnum.ProdLId.index();
    public static final int SHRINKPATTERN = AttributesEnum.ShrinkPattern.index();
    public static final int LENGTHWISEFROM = AttributesEnum.LengthWiseFrom.index();
    public static final int LENGTHWISETO = AttributesEnum.LengthWiseTo.index();
    public static final int WIDTHWISEFROM = AttributesEnum.WidthWiseFrom.index();
    public static final int WIDTHWISETO = AttributesEnum.WidthWiseTo.index();
    public static final int TOTALROLLS = AttributesEnum.TotalRolls.index();
    public static final int TOTALYRDS = AttributesEnum.TotalYrds.index();
    public static final int REAMARKS = AttributesEnum.Reamarks.index();
    public static final int MNJMFGFABINSPTRNALOCDVIEW = AttributesEnum.MnjMfgFabinsPtrnalocDView.index();
    public static final int SHRINKPATTERNVO1 = AttributesEnum.ShrinkPatternVO1.index();
    public static final int SHRINKPATTERNVO2 = AttributesEnum.ShrinkPatternVO2.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgFabinsPtrnalocLViewRowImpl() {
    }

    /**
     * Gets MnjMfgFabinsPtrnalocL entity object.
     * @return the MnjMfgFabinsPtrnalocL
     */
    public MnjMfgFabinsPtrnalocLImpl getMnjMfgFabinsPtrnalocL() {
        return (MnjMfgFabinsPtrnalocLImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ALOC_LINE_ID using the alias name AlocLineId.
     * @return the ALOC_LINE_ID
     */
    public Number getAlocLineId() {
        return (Number) getAttributeInternal(ALOCLINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for ALOC_LINE_ID using the alias name AlocLineId.
     * @param value value to set the ALOC_LINE_ID
     */
    public void setAlocLineId(Number value) {
        setAttributeInternal(ALOCLINEID, value);
    }

    /**
     * Gets the attribute value for PROD_L_ID using the alias name ProdLId.
     * @return the PROD_L_ID
     */
    public Number getProdLId() {
        return (Number) getAttributeInternal(PRODLID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROD_L_ID using the alias name ProdLId.
     * @param value value to set the PROD_L_ID
     */
    public void setProdLId(Number value) {
        setAttributeInternal(PRODLID, value);
    }

    /**
     * Gets the attribute value for SHRINK_PATTERN using the alias name ShrinkPattern.
     * @return the SHRINK_PATTERN
     */
    public String getShrinkPattern() {
        return (String) getAttributeInternal(SHRINKPATTERN);
    }

    /**
     * Sets <code>value</code> as attribute value for SHRINK_PATTERN using the alias name ShrinkPattern.
     * @param value value to set the SHRINK_PATTERN
     */
    public void setShrinkPattern(String value) {
        setAttributeInternal(SHRINKPATTERN, value);
    }

    /**
     * Gets the attribute value for LENGTH_WISE_FROM using the alias name LengthWiseFrom.
     * @return the LENGTH_WISE_FROM
     */
    public Number getLengthWiseFrom() {
        return (Number) getAttributeInternal(LENGTHWISEFROM);
    }

    /**
     * Sets <code>value</code> as attribute value for LENGTH_WISE_FROM using the alias name LengthWiseFrom.
     * @param value value to set the LENGTH_WISE_FROM
     */
    public void setLengthWiseFrom(Number value) {
        setAttributeInternal(LENGTHWISEFROM, value);
    }

    /**
     * Gets the attribute value for LENGTH_WISE_TO using the alias name LengthWiseTo.
     * @return the LENGTH_WISE_TO
     */
    public Number getLengthWiseTo() {
        return (Number) getAttributeInternal(LENGTHWISETO);
    }

    /**
     * Sets <code>value</code> as attribute value for LENGTH_WISE_TO using the alias name LengthWiseTo.
     * @param value value to set the LENGTH_WISE_TO
     */
    public void setLengthWiseTo(Number value) {
        setAttributeInternal(LENGTHWISETO, value);
    }

    /**
     * Gets the attribute value for WIDTH_WISE_FROM using the alias name WidthWiseFrom.
     * @return the WIDTH_WISE_FROM
     */
    public Number getWidthWiseFrom() {
        return (Number) getAttributeInternal(WIDTHWISEFROM);
    }

    /**
     * Sets <code>value</code> as attribute value for WIDTH_WISE_FROM using the alias name WidthWiseFrom.
     * @param value value to set the WIDTH_WISE_FROM
     */
    public void setWidthWiseFrom(Number value) {
        setAttributeInternal(WIDTHWISEFROM, value);
    }

    /**
     * Gets the attribute value for WIDTH_WISE_TO using the alias name WidthWiseTo.
     * @return the WIDTH_WISE_TO
     */
    public Number getWidthWiseTo() {
        return (Number) getAttributeInternal(WIDTHWISETO);
    }

    /**
     * Sets <code>value</code> as attribute value for WIDTH_WISE_TO using the alias name WidthWiseTo.
     * @param value value to set the WIDTH_WISE_TO
     */
    public void setWidthWiseTo(Number value) {
        setAttributeInternal(WIDTHWISETO, value);
    }

    /**
     * Gets the attribute value for TOTAL_ROLLS using the alias name TotalRolls.
     * @return the TOTAL_ROLLS
     */
    public Number getTotalRolls() {
        return (Number) getAttributeInternal(TOTALROLLS);
    }

    /**
     * Sets <code>value</code> as attribute value for TOTAL_ROLLS using the alias name TotalRolls.
     * @param value value to set the TOTAL_ROLLS
     */
    public void setTotalRolls(Number value) {
        setAttributeInternal(TOTALROLLS, value);
    }

    /**
     * Gets the attribute value for TOTAL_YRDS using the alias name TotalYrds.
     * @return the TOTAL_YRDS
     */
    public Number getTotalYrds() {
        return (Number) getAttributeInternal(TOTALYRDS);
    }

    /**
     * Sets <code>value</code> as attribute value for TOTAL_YRDS using the alias name TotalYrds.
     * @param value value to set the TOTAL_YRDS
     */
    public void setTotalYrds(Number value) {
        setAttributeInternal(TOTALYRDS, value);
    }

    /**
     * Gets the attribute value for REAMARKS using the alias name Reamarks.
     * @return the REAMARKS
     */
    public String getReamarks() {
        return (String) getAttributeInternal(REAMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REAMARKS using the alias name Reamarks.
     * @param value value to set the REAMARKS
     */
    public void setReamarks(String value) {
        setAttributeInternal(REAMARKS, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnjMfgFabinsPtrnalocDView.
     */
    public RowIterator getMnjMfgFabinsPtrnalocDView() {
        return (RowIterator)getAttributeInternal(MNJMFGFABINSPTRNALOCDVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ShrinkPatternVO1.
     */
    public RowSet getShrinkPatternVO1() {
        return (RowSet)getAttributeInternal(SHRINKPATTERNVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ShrinkPatternVO2.
     */
    public RowSet getShrinkPatternVO2() {
        return (RowSet)getAttributeInternal(SHRINKPATTERNVO2);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
